import js from "@eslint/js";
import tsParser from "@typescript-eslint/parser";
import tsPlugin from "@typescript-eslint/eslint-plugin";
import reactHooks from "eslint-plugin-react-hooks";
import reactPlugin from "eslint-plugin-react";
import jsxA11y from "eslint-plugin-jsx-a11y";
import importPlugin from "eslint-plugin-import";

export default [
  {
    ignores: ["node_modules/**", ".next/**", "dist/**", "out/**", "**/*.md"],
  },
  js.configs.recommended,
  {
    files: ["**/*.{ts,tsx}"],
    languageOptions: {
      parser: tsParser,
      parserOptions: {
        ecmaVersion: "latest",
        sourceType: "module",
        project: false,
      },
      globals: {
        process: "readonly",
      },
    },
    plugins: {
      "@typescript-eslint": tsPlugin,
      react: reactPlugin,
      "react-hooks": reactHooks,
      "jsx-a11y": jsxA11y,
      import: importPlugin,
    },
    settings: {
      react: { version: "detect" },
      "import/resolver": {
        typescript: { project: "./tsconfig.json" },
      },
    },
    rules: {
      "@typescript-eslint/no-unused-vars": ["warn", { argsIgnorePattern: "^_" }],
      "@typescript-eslint/consistent-type-imports": ["warn", { prefer: "type-imports" }],
      "react/jsx-no-target-blank": "off",
      "react/react-in-jsx-scope": "off",
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "import/order": [
        "warn",
        {
          groups: [["builtin", "external"], ["internal"], ["parent", "sibling", "index"], ["type"]],
          alphabetize: { order: "asc", caseInsensitive: true },
          "newlines-between": "always",
        },
      ],
    },
  },
  {
    files: ["**/*.test.ts", "**/*.test.tsx"],
    languageOptions: {
      globals: {
        vi: "readonly",
        describe: "readonly",
        it: "readonly",
        test: "readonly",
        expect: "readonly",
        beforeEach: "readonly",
        afterEach: "readonly",
        beforeAll: "readonly",
        afterAll: "readonly",
        // Browser globals for DOM testing
        Element: "readonly",
        HTMLElement: "readonly",
        HTMLDivElement: "readonly",
        HTMLButtonElement: "readonly",
        HTMLInputElement: "readonly",
        HTMLTextAreaElement: "readonly",
        HTMLSelectElement: "readonly",
        HTMLOptionElement: "readonly",
        HTMLFormElement: "readonly",
        HTMLAnchorElement: "readonly",
        HTMLImageElement: "readonly",
        HTMLSpanElement: "readonly",
        HTMLParagraphElement: "readonly",
        HTMLHeadingElement: "readonly",
        HTMLUListElement: "readonly",
        HTMLOListElement: "readonly",
        HTMLLIElement: "readonly",
        HTMLTableElement: "readonly",
        HTMLTableRowElement: "readonly",
        HTMLTableCellElement: "readonly",
        HTMLTableHeaderCellElement: "readonly",
        HTMLTableBodyElement: "readonly",
        HTMLTableHeadElement: "readonly",
        HTMLTableFootElement: "readonly",
        HTMLFieldSetElement: "readonly",
        HTMLLabelElement: "readonly",
        HTMLLegendElement: "readonly",
        HTMLDetailsElement: "readonly",
        HTMLSummaryElement: "readonly",
        HTMLDialogElement: "readonly",
        HTMLMenuElement: "readonly",
        HTMLMenuItemElement: "readonly",
        HTMLProgressElement: "readonly",
        HTMLMeterElement: "readonly",
        HTMLOutputElement: "readonly",
        HTMLDataElement: "readonly",
        HTMLTimeElement: "readonly",
        HTMLMarkElement: "readonly",
        HTMLRubyElement: "readonly",
        HTMLRtElement: "readonly",
        HTMLRpElement: "readonly",
        HTMLBdiElement: "readonly",
        HTMLBdoElement: "readonly",
        HTMLWbrElement: "readonly",
        HTMLCanvasElement: "readonly",
        HTMLMapElement: "readonly",
        HTMLAreaElement: "readonly",
        HTMLMediaElement: "readonly",
        HTMLVideoElement: "readonly",
        HTMLAudioElement: "readonly",
        HTMLTrackElement: "readonly",
        HTMLSourceElement: "readonly",
        HTMLObjectElement: "readonly",
        HTMLParamElement: "readonly",
        HTMLEmbedElement: "readonly",
        HTMLIFrameElement: "readonly",
        HTMLScriptElement: "readonly",
        HTMLStyleElement: "readonly",
        HTMLLinkElement: "readonly",
        HTMLMetaElement: "readonly",
        HTMLTitleElement: "readonly",
        HTMLHeadElement: "readonly",
        HTMLBodyElement: "readonly",
        HTMLHtmlElement: "readonly",
        HTMLDocument: "readonly",
        Document: "readonly",
        Window: "readonly",
        Event: "readonly",
        EventTarget: "readonly",
        Node: "readonly",
        NodeList: "readonly",
        HTMLCollection: "readonly",
        NamedNodeMap: "readonly",
        Attr: "readonly",
        CharacterData: "readonly",
        Text: "readonly",
        Comment: "readonly",
        CDATASection: "readonly",
        DocumentType: "readonly",
        DocumentFragment: "readonly",
        ProcessingInstruction: "readonly",
        Range: "readonly",
        Selection: "readonly",
        getComputedStyle: "readonly",
        requestAnimationFrame: "readonly",
        cancelAnimationFrame: "readonly",
        setTimeout: "readonly",
        clearTimeout: "readonly",
        setInterval: "readonly",
        clearInterval: "readonly",
        console: "readonly",
        screen: "readonly",
        window: "readonly",
        document: "readonly",
        location: "readonly",
        history: "readonly",
        navigator: "readonly",
        localStorage: "readonly",
        sessionStorage: "readonly",
        indexedDB: "readonly",
        fetch: "readonly",
        Headers: "readonly",
        Request: "readonly",
        Response: "readonly",
        URL: "readonly",
        URLSearchParams: "readonly",
        FormData: "readonly",
        File: "readonly",
        FileReader: "readonly",
        Blob: "readonly",
        ArrayBuffer: "readonly",
        Uint8Array: "readonly",
        Uint16Array: "readonly",
        Uint32Array: "readonly",
        Int8Array: "readonly",
        Int16Array: "readonly",
        Int32Array: "readonly",
        Float32Array: "readonly",
        Float64Array: "readonly",
        DataView: "readonly",
        Map: "readonly",
        Set: "readonly",
        WeakMap: "readonly",
        WeakSet: "readonly",
        Promise: "readonly",
        Symbol: "readonly",
        Proxy: "readonly",
        Reflect: "readonly",
        JSON: "readonly",
        Math: "readonly",
        Date: "readonly",
        RegExp: "readonly",
        Error: "readonly",
        TypeError: "readonly",
        ReferenceError: "readonly",
        SyntaxError: "readonly",
        RangeError: "readonly",
        EvalError: "readonly",
        URIError: "readonly",
        AggregateError: "readonly",
        Array: "readonly",
        Object: "readonly",
        Function: "readonly",
        Boolean: "readonly",
        Number: "readonly",
        String: "readonly",
        Infinity: "readonly",
        NaN: "readonly",
        undefined: "readonly",
        null: "readonly",
        globalThis: "readonly",
      },
    },
  },
  {
    files: ["scripts/**/*.cjs", "scripts/**/*.js"],
    languageOptions: {
      globals: {
        console: "readonly",
        process: "readonly",
        module: "readonly",
        __dirname: "readonly",
        require: "readonly",
      },
    },
  },
];
